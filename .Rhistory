library(readr)
iner_radius = 3.5
outter_radius = 33.5
density_mat = 3.5
thickness = 10
activity_c = 100 #Bq/kg
time_sec = 1
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_Ba_385.txt",
col_names = FALSE, skip = 6, comment = "#")
View(Br3_spec_385kev_512ch)
View(Br3_spec_385kev_512ch)
volume = 3.1416 * (outter_radius^2 - iner_radius^2) * thickness
mass = volume * density_mat
Activity = activity_c * mass
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
interval_enr = Br3_spec_385kev_512ch$X1[1]*2
efficiency = sum(Br3_spec_385kev_512ch$X2*interval_enr)
countrate = Activity * efficiency * time_sec
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_spec_Eu152.txt",
col_names = FALSE, skip = 6, comment = "#")
View(Br3_spec_385kev_512ch)
volume = 3.1416 * (outter_radius^2 - iner_radius^2) * thickness
mass = volume * density_mat
Activity = activity_c * mass
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
interval_enr = Br3_spec_385kev_512ch$X1[1]*2
efficiency = sum(Br3_spec_385kev_512ch$X2*interval_enr)
countrate = Activity * efficiency * time_sec
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_spec_Eu154.txt",
col_names = FALSE, skip = 6, comment = "#")
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_spec_Eu154.txt",
col_names = FALSE, skip = 6, comment = "#")
View(Br3_spec_385kev_512ch)
volume = 3.1416 * (outter_radius^2 - iner_radius^2) * thickness
mass = volume * density_mat
Activity = activity_c * mass
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
interval_enr = Br3_spec_385kev_512ch$X1[1]*2
efficiency = sum(Br3_spec_385kev_512ch$X2*interval_enr)
countrate = Activity * efficiency * time_sec
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_Ba_512_17.txt",
col_names = FALSE, skip = 6, comment = "#")
View(Br3_spec_385kev_512ch)
volume = 3.1416 * (outter_radius^2 - iner_radius^2) * thickness
mass = volume * density_mat
Activity = activity_c * mass
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_Ba_512_20.txt",
col_names = FALSE, skip = 6, comment = "#")
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
setwd("D:/GITHUB/laradata_read")
library(utils)
####..... Input data ....#####
nuclide = "Ba-133" # nucliede "symbol-massnumber-m/D(If needed)"
threshhold_intensity = 0.49   # Minimum intensity in pwersent % (0.90%)
bin.size <- 0.0001  # Bin size of spectra   0.0001= 100 eV
# Generate file name
lara_data_file = sprintf("%s.lara.txt", nuclide)
output_file =  sprintf("%s_spectr_thrsh_%f_inp.txt", nuclide, threshhold_intensity)
# Read lara data file
url_lara = sprintf("http://www.nucleide.org/DDEP_WG/Nuclides/%s", lara_data_file)
all_content = readLines(url_lara)
Head_skip = all_content[-c(1:grep("--------",all_content))]
data_lara <- read.table(textConnection(Head_skip[-length(Head_skip)]), header = TRUE, sep = ";", quote = "")
# Make a subset for a threshhold intensity (eg. > 0.9 )
data_sub = subset(data_lara, data_lara$Intensity.... > threshhold_intensity)
# Change the column name of requried data
colnames(data_sub)[c(1,3,5)] <- c('Energy_ev','Intensity_frac', 'Type')
# Remove alfa lines
data_sub = subset(data_sub, data_sub$Type !='a')
# Create and open an text file to write the spectra
file.create(output_file)
fileConn1 <- file(output_file, "w")
#Write the spectra in text file .... two lines for a bin..... intensity is -1 for last line
for(i in 1:nrow(data_sub)){
write(sprintf('myfile.write ("SPECTR   \ %fe6\   \ %f\\n")', (data_sub$Energy_ev[i]*0.001), (data_sub$Intensity_frac[i]/100)), fileConn1, append=TRUE)
#write(sprintf("SPECTR   \ %fe6\   \ %f", (data_sub$Energy_ev[i]*0.001), (data_sub$Intensity_frac[i]/100)), fileConn1, append=TRUE)
if(i != nrow(data_sub)){
write(sprintf('myfile.write ("SPECTR   \ %fe6\   \ %f\\n")', ((data_sub$Energy_ev[i]*0.001)+bin.size), (0)), fileConn1, append=TRUE)
#write(sprintf("SPECTR   \ %fe6\   \ %f", ((data_sub$Energy_ev[i]*0.001)+bin.size), (0)), fileConn1, append=TRUE)
}else{
write(sprintf('myfile.write ("SPECTR   \ %fe6\   \ %f\\n")', ((data_sub$Energy_ev[i]*0.001)+bin.size), (-1)), fileConn1, append=TRUE)
#write(sprintf("SPECTR   \ %fe6\   \ %f", ((data_sub$Energy_ev[i]*0.001)+bin.size), (-1)), fileConn1, append=TRUE)
}
}
close(fileConn1)
file.show(output_file)
library(readr)
iner_radius = 3.5
outter_radius = 33.5
density_mat = 3.5
thickness = 10
activity_c = 100 #Bq/kg
time_sec = 1
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_Ba_512_20.txt",
col_names = FALSE, skip = 6, comment = "#")
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
Br3_spec_385kev_512ch <- read_table2("D:/PhD/Simulation_data/Simulation_data/BR3/BR3_CZT_Ba133/Br3_Ba_512_17.txt",
col_names = FALSE, skip = 6, comment = "#")
plot(Br3_spec_385kev_512ch$X1,Br3_spec_385kev_512ch$X2, "l")
library(utils)
####..... Input data ....#####
nuclide = "Cs-137" # nucliede "symbol-massnumber-m/D(If needed)"
threshhold_intensity = 0 # Minimum intensity in pwersent % (0.90%)
bin.size <- 0.0001  # Bin size of spectra   0.0001= 100 eV
# Generate file name
lara_data_file = sprintf("%s.lara.txt", nuclide)
output_file =  sprintf("%s_spectr_thrsh_%f_inp.txt", nuclide, threshhold_intensity)
# Read lara data file
url_lara = sprintf("http://www.lnhb.fr/nuclides/%s", lara_data_file)
all_content = readLines(url_lara)
Head_skip = all_content[-c(1:grep("--------",all_content))]
data_lara <- read.table(textConnection(Head_skip[-length(Head_skip)]), header = TRUE, sep = ";", quote = "")
# Make a subset for a threshhold intensity (eg. > 0.9 )
data_sub = data_lara[which(data_lara$Intensity.... > threshhold_intensity), ]
# Change the column name of requried data
colnames(data_sub)[c(1,3,5)] <- c('Energy_ev','Intensity_frac', 'Type')
data_sub = data_sub[order(data_sub$Energy_ev), ]
data_sub = data_sub[ which(data_sub$Type != ' a '), ]
# Remove alfa lines
data_sub = data_sub[ ,c(1,3,5)]
# Create and open an text file to write the spectra
file.create(output_file)
fileConn1 <- file(output_file, "w")
#Write the spectra in text file .... two lines for a bin..... intensity is -1 for last line
for(i in 1:nrow(data_sub)){
if (i != nrow(data_sub)){
bin_ck = (data_sub$Energy_ev[i+1]*0.001)-(data_sub$Energy_ev[i]*0.001)
if (bin_ck < bin.size){
bin_add = ((data_sub$Energy_ev[i+1]*0.001)-(data_sub$Energy_ev[i]*0.001))/2.0
}else{
bin_add = bin.size
}
}
write(sprintf('myfile.write ("SPECTR   \ %fe6\   \ %f\\n")', (data_sub$Energy_ev[i]*0.001), (data_sub$Intensity_frac[i]/100)), fileConn1, append=TRUE)
if(i != nrow(data_sub)){
write(sprintf('myfile.write ("SPECTR   \ %fe6\   \ %f\\n")', ((data_sub$Energy_ev[i]*0.001)+bin_add), (0)), fileConn1, append=TRUE)
}else{
write(sprintf('myfile.write ("SPECTR   \ %fe6\   \ %f\\n")', ((data_sub$Energy_ev[i]*0.001)+bin_add), (-1)), fileConn1, append=TRUE)
}
}
close(fileConn1)
file.show(output_file)
